# do remember that it just converts the sent letters according to the semimak layout
capslock = overload(ctrl_vim, esc)
shift = oneshot(shift)
alt = oneshot(alt)
lsgt = oneshot(shift)

[ctrl_vim:C]
space = swap(vim_mode)
x = cut
c = copy
v = paste
delete = C-delete
backspace = C-backspace

# easier to reach then ones in ctrl_vim, but can't add full functionality here. So movement keys are accessible both ways.
[alt]
a = left
s = down
d = up
f = right

[shift]
backspace = C-backspace
#BUG this assumes backspace is on AltGr. Will lead to unintended consiquences if not!
rightalt = C-backspace

[vim_mode:C]
space = swap(ctrl_vim)
a = left
s = down
d = up
f = right
c = C-left
k = C-right
u = macro(C-right right)
x = cut
# copy is overwritten by now 'b' (on semimak), so you'd switch back or use the actual 'c' on semimak for this
v = paste
delete = C-delete
backspace = C-backspace
# apparently almost completely useless, as `C-{arrow}` couldn't care less for the start of the line; and just goes right past it.
l = macro(C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right C-right)
; = macro(C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left C-left)
[vim_mode+shift]
a = S-left
s = S-down
d = S-up
f = S-right
c = C-S-left
k = C-S-right
u = macro(C-S-right S-right)
x = cut
# copy is overwritten by now 'b' (on semimak), so you'd switch back or use the actual 'c' on semimak for this
v = paste
delete = C-delete
backspace = C-backspace
l = macro(C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right C-S-right)
; = macro(C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left C-S-left)
