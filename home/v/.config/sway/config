exec systemctl --user import-environment
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec /usr/lib/xdg-desktop-portal -r & exec /usr/lib/xdg-desktop-portal-wlr
exec mkdir -p ~/tmp/Screenshots

set $mod Mod4
# Rofi
set $wifi ~/.config/rofi/modi/nmcli
set $menu rofi -m $(expr $(swaymsg -t get_tree | jq '.nodes | map([recurse(.nodes[]?, .floating_nodes[]?) | .focused] | any) | index(true)') - 1) -show drun -run-command 'swaymsg exec -- {cmd}'
#


set $background ~/Wallpapers/AndreySakharov.jpg

set $left h
set $down t
set $up n
set $right s

assign [class="Google-chrome"] 2
assign [app_id="google-chrome"] 2
assign [class="discord"] 3
assign [app_id="org.telegram.desktop"] 3
assign [app_id="org.pwmt.zathura"] 4
# doesn't work, as netrw sets the title as "nvim: [No name]"
#assign [app_id="Alacritty" title="nvim: ~/Todo*$"] 4


font pango:Sans 8
titlebar_padding 1 1
titlebar_border_thickness 1
focus_on_window_activation none
for_window [class="discord"] focus=off
for_window [app_id="org.telegram.desktop"] focus=off
focus_follows_mouse yes
mouse_warping container
default_border pixel 1
smart_gaps off
gaps inner 0
xwayland enable
smart_borders on
hide_edge_borders both

bindgesture pinch:outward exec xdotool key ctrl+plus
bindgesture pinch:inward exec xdotool key ctrl+minus

# # Autostart
exec "bash -c 'ps -u $USER -o pid= > /tmp/sway_existing_pids.txt'"
exec "bash ~/.config/sway/restore_session.sh"
#exec "bash ~/.config/sway/listen.sh"

exec mako
exec libinput-gestures
exec wlr-gamma-service
exec keyd-application-mapper -d
exec bluetoothctl
exec pipewire
exec pipewire-pulse
exec wireplumber
exec greenclip daemon>/dev/null
bindsym $mod+g exec rofi -modi "clipboard:greenclip print" -show clipboard
bindsym $mod+Shift+g exec greenclip clear
#

input * {
    xkb_layout "us,ru"
    xkb_variant "dvorak,"

    natural_scroll enabled
    tap enabled
    scroll_factor 1.43

    repeat_delay 140
    repeat_rate 65
}
# Here it is fed by keyd. Done so I can use Alt+Shift in other keybinds
# to get the code of the key, use xev or auto-hotkey
bindcode Mod1+Shift+52 input type:keyboard xkb_switch_layout next

output * bg $background fill

# # Multimedia
exec_always pamixer --default-source --set-volume 30
exec_always pamixer --set-volume 45
bindsym $mod+F5 exec pamixer --toggle-mute
bindsym $mod+F6 exec pamixer --decrease 5
bindsym $mod+F7 exec pamixer --increase 5
bindsym $mod+F8 exec pamixer --default-source -t
bindsym $mod+Shift+F6 exec pamixer --default-source --decrease 5
bindsym $mod+Shift+F7 exec pamixer --default-source --increase 5
bindsym XF86AudioPlay exec playerctl play-pause
bindsym $mod+F3 exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
# could be redundant, if I find a way to fix a bug with audio on the phone stopping at times with headphones connected to pc too.
bindsym $mod+b exec bluetoothctl connect E8:EE:CC:36:53:49
bindsym $mod+Shift+b exec bluetoothctl disconnect E8:EE:CC:36:53:49
#

# # Redshift
# calibrated so it takes 20 key presses for both temperature and brightness to move between the two default states.
bindsym $mod+F9 exec gdbus call -e -d net.zoidplex.wlr_gamma_service -o /net/zoidplex/wlr_gamma_service -m net.zoidplex.wlr_gamma_service.temperature.decrease 210 && gdbus call -e -d net.zoidplex.wlr_gamma_service -o /net/zoidplex/wlr_gamma_service -m net.zoidplex.wlr_gamma_service.brightness.decrease 0.0275
bindsym $mod+F10 exec gdbus call -e -d net.zoidplex.wlr_gamma_service -o /net/zoidplex/wlr_gamma_service -m net.zoidplex.wlr_gamma_service.temperature.increase 210 && gdbus call -e -d net.zoidplex.wlr_gamma_service -o /net/zoidplex/wlr_gamma_service -m net.zoidplex.wlr_gamma_service.brightness.increase 0.0275
bindsym $mod+Shift+F9 exec gdbus call -e -d net.zoidplex.wlr_gamma_service -o /net/zoidplex/wlr_gamma_service -m net.zoidplex.wlr_gamma_service.temperature.set 2300 && gdbus call -e -d net.zoidplex.wlr_gamma_service -o /net/zoidplex/wlr_gamma_service -m net.zoidplex.wlr_gamma_service.brightness.set 0.45
bindsym $mod+Shift+F10 exec gdbus call -e -d net.zoidplex.wlr_gamma_service -o /net/zoidplex/wlr_gamma_service -m net.zoidplex.wlr_gamma_service.temperature.set 6500 && gdbus call -e -d net.zoidplex.wlr_gamma_service -o /net/zoidplex/wlr_gamma_service -m net.zoidplex.wlr_gamma_service.brightness.set 1
exec sleep 2 && /home/v/s/help_scripts/auto_redshift/target/release/auto_redshift 23:00
#

# # workspaces
set $pin exec ~/.config/sway/pin_focused/move.sh

bindsym $mod+1   workspace 1; $pin
bindsym $mod+2   workspace 2; $pin
bindsym $mod+3   workspace 3; $pin
bindsym $mod+4   workspace 4; $pin
bindsym $mod+5   workspace 5; $pin
bindsym $mod+6   workspace 6; $pin
bindsym $mod+7   workspace 7; $pin
bindsym $mod+8   workspace 8; $pin
bindsym $mod+9   workspace 9; $pin
bindsym $mod+0   workspace 0; $pin
bindsym $mod+Shift+1    move container to workspace 1; $pin
bindsym $mod+Shift+2    move container to workspace 2; $pin
bindsym $mod+Shift+3    move container to workspace 3; $pin
bindsym $mod+Shift+4    move container to workspace 4; $pin
bindsym $mod+Shift+5    move container to workspace 5; $pin
bindsym $mod+Shift+6    move container to workspace 6; $pin
bindsym $mod+Shift+7    move container to workspace 7; $pin
bindsym $mod+Shift+8    move container to workspace 8; $pin
bindsym $mod+Shift+9    move container to workspace 9; $pin
bindsym $mod+Shift+0    move container to workspace 0; $pin

bindsym Mod1+Tab focus prev
bindsym Mod1+apostrophe focus next
#

bindsym $mod+c kill
bindsym $mod+r reload
# I never actually want to exit sway; so just kill the pc on q. Shift+q is never supposed to be used.
bindsym $mod+Shift+q exec "bash -c 'for pid in $(ps -u $USER -o pid=); do if ! rg -q -w $pid /tmp/sway_existing_pids.txt; then kill -TERM $pid 2>/dev/null; fi; done'", exec swaymsg exit
# the first command gracefully exits chrome, which is apparently very sensitive.
bindsym $mod+q exec "pkill -TERM -x chrome; sudo shutdown -h now"

#bindsym $mod+l exec $lock
bindsym $mod+Escape exec $power
bindsym $mod+End exec $wifi

bindsym $mod+$left resize grow width 6ppt
bindsym $mod+$down resize shrink height 6ppt
bindsym $mod+$up resize grow height 6ppt
bindsym $mod+$right resize shrink width 6ppt

bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

bindsym $mod+Return exec alacritty
bindsym $mod+z floating toggle

# 26 is a dot on my keyboard (look up with xev)
bindcode $mod+26 sticky toggle


# Screenshots
set $throwaway_screenshot slurp | grim -g - ~/tmp/Screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png && swappy -f ~/tmp/Screenshots/$(ls -t ~/tmp/Screenshots | awk 'NR==1 {print; exit}')
bindsym Insert exec $throwaway_screenshot
mode "screenshot" {
	set $switch_out swaymsg mode \"default\" && eww update sway_mode=default
	set $fullscreen_screenshot grim ~/tmp/Screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png && swappy -f ~/tmp/Screenshots/$(ls -t ~/tmp/Screenshots | awk 'NR==1 {print; exit}')
	set $delayed_screenshot sleep 3 && slurp | grim -g - ~/tmp/Screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png && swappy -f ~/tmp/Screenshots/$(ls -t ~/tmp/Screenshots | awk 'NR==1 {print; exit}')
	set $important_screenshot slurp | grim -g - ~/Images/Screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png && swappy -f ~/Images/Screenshots/$(ls -t ~/Images/Screenshots | awk 'NR==1 {print; exit}')
	set $open_last_screenshot swappy -f ~/Images/Screenshots/$(ls -t ~/Images/Screenshots | awk 'NR==1 {print; exit}')

	bindsym i exec $switch_out && $important_screenshot
	# doesn't work for some reason
	bindsym f exec $switch_out && $fullscrseen_screenshot
	bindsym d exec $switch_out && $delayed_screenshot
	bindsym o exec $switch_out && $open_last_screenshot
	bindsym Insert exec $switch_out && throwaway_screenshot

	bindsym $mod+Insert exec $switch_out
	bindsym $mod+C exec $switch_out
	bindsym Escape exec $switch_out
	bindsym Ctrl+c exec $switch_out
	bindsym q exec $switch_out
}
bindsym $mod+Insert exec "swaymsg mode screenshot && eww update sway_mode=screenshot"
#

bindsym $mod+m exec $menu
bindsym $mod+Space exec makoctl dismiss --all
bindsym $mod+o split toggle
bindsym $mod+Ctrl+t layout tabbed
bindsym $mod+f fullscreen
bindsym $mod+p focus parent
bindsym $mod+minus scratchpad show
bindsym $mod+Shift+minus move scratchpad
bindsym Ctrl+Shift+Escape exec alacritty --class btm-float -e btm -u; for_window [app_id="btm-float"] floating enable
bindsym $mod+d exec ~/.config/sway/discord_toggle.sh
bindsym $mod+Mod1+t exec ~/s/help_scripts/theme_toggle.sh

exec "eww daemon; eww open bar"
# toggle visibility
bindsym $mod+e exec ~/.config/sway/eww_visibility_toggle.sh
bindsym Mod1+e exec ~/.config/sway/eww_zoom_toggle.sh
# restart properly
bindsym $mod+Shift+e exec "eww kill; eww open bar"

# check if any task was cut short during the last session
exec sleep 3 && my_todo

#TODO: make into a toggle
#bindcode $mod+34 exec ~/.config/sway/toggle_screen.sh
bindcode $mod+34 output * dpms on
bindcode $mod+Shift+34 output * dpms off
#bindcode $mod+Control+34 exec ~/.config/sway/toggle_screen.sh DP-1


#exec bash ~/.config/sway/try_connect_headphones.sh


#exec_always "swaymsg -t get_tree > ~/.config/sway/last_layout.json"
